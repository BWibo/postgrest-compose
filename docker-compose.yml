version: '3.9'

# Docs ########################################################################
# https://postgrest.org/en/stable/install.html#docker


# Volumes #####################################################################
volumes:
  db_data:
    # external: true
  caddy_data:
    # external: true

# Networks ####################################################################
networks:
  net:
    driver: overlay
    attachable: true

# Services ####################################################################
services:
  # Caddy ---------------------------------------------------------------------
  caddy:
    image: caddy:${CADDY_VERSION}
    networks:
      - net
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    environment:
      DOMAIN: "${DOMAIN:?DOMAIN not set}"
      ADMIN_EMAIL: "${ADMIN_EMAIL:?ADMIN_EMAIL not set}"
    volumes:
      - caddy_data:/data
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile

  # Postgrest -----------------------------------------------------------------
  postgrest:
    image: postgrest/postgrest:${POSTGREST_VERSION}
    networks:
      - net
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PGRST_DB_SCHEMA: public
      # PGRST_DB_ANON_ROLE: In production this role should not be the same as the one used for the connection
      PGRST_DB_ANON_ROLE: ${POSTGRES_USER}
      PGRST_OPENAPI_SERVER_PROXY_URI: https://${DOMAIN}/postgrest/
      PGRST_MAX_ROWS: 1000
      PGRST_DB_POOL_TIMEOUT: 10
      PGRST_DB_POOL: 2
    depends_on:
      db:
        condition: service_healthy

  # Swagger UI ----------------------------------------------------------------
  swagger:
    image: swaggerapi/swagger-ui:${SWAGGER_VERSION}
    networks:
      - net
    restart: unless-stopped
    environment:
      API_URL: https://${DOMAIN}/postgrest/
    depends_on:
      postgrest:
        condition: service_started

  # Postgres ------------------------------------------------------------------
  db:
    image: postgres:${POSTGRES_VERSION:?POSTGRES_VERSION not set}
    networks:
      - net
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:?POSTGRES_DB not set}
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:?POSTGRES_USER not set} -d ${POSTGRES_DB:?POSTGRES_DB not set}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    # command:
    #   postgres
    #   -c max_connections=100
    #   -c shared_buffers=1GB
    #   -c effective_cache_size=3GB
    #   -c maintenance_work_mem=256MB
    #   -c checkpoint_completion_target=0.9
    #   -c wal_buffers=16MB
    #   -c default_statistics_target=100
    #   -c random_page_cost=1.1
    #   -c effective_io_concurrency=200
    #   -c work_mem=10485kB
    #   -c min_wal_size=2GB
    #   -c max_wal_size=8GB
    #   -c max_worker_processes=2
    #   -c max_parallel_workers_per_gather=1
    #   -c max_parallel_workers=2
    #   -c max_parallel_maintenance_workers=1
